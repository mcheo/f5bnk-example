apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  # deployment is namespace independent. Include namespace-specific config in nginx-conf-cm
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 8080 # port number <1024 requires root privileges
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            name: nginx-conf-volume
            readOnly: true
            subPath: nginx.conf
      - name: netshoot
        image: nicolaka/netshoot:latest
        command: [ "sleep", "infinity" ] # Keeps the container running
        imagePullPolicy: IfNotPresent
        # Optional: Add resources or limits if needed
        volumeMounts:
        - name: netshoot-conf-volume
          mountPath: /root/.curlrc
          subPath: .curlrc
      volumes:
        - name: nginx-conf-volume
          configMap:
            name: nginx-conf-cm
        - name: netshoot-conf-volume
          configMap:
            # defined previously
            name: netshoot-conf-cm
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-app-svc
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: nginx
  type: ClusterIP
---
# repeat of ConfigMap in test-app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: netshoot-conf-cm
data:
  .curlrc: |
    # custom CURL options
    --location 
    --silent 
    --insecure 
    --max-time 1

---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations: {}
  name: nginx-conf-cm
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections 10240;
    }
    http {
      server {
        listen 8080;
        add_header Access-Control-Allow-Origin *;
        location / {
          default_type text/plain;
          return 200 "$server_name\n$remote_addr:$remote_port-->$server_addr:$server_port\n";
        }
      }
    }